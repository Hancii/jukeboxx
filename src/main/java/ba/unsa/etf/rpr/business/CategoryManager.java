package ba.unsa.etf.rpr.business;

import ba.unsa.etf.rpr.dao.CategoryDao;
import ba.unsa.etf.rpr.dao.DaoFactory;
import ba.unsa.etf.rpr.domain.Category;
import ba.unsa.etf.rpr.exception.JukeBoxException;

import java.util.List;

public class CategoryManager {

    private final CategoryDao categoryDao = DaoFactory.categoryDao();

    public CategoryManager() {}

    public void validateCategoryName(String name) throws JukeBoxException {
        if (name == null || name.length() > 45 || name.length() < 3) {
            throw new JukeBoxException("Category name must be between 3 and 45 chars");
        }
    }
    /**
     * Method that lets us get all the categories from the database
     * @return
     * @throws JukeBoxException
     */
    public List<Category> getAll() throws JukeBoxException {
        return categoryDao.getAll();
    }
    /**
     * Method that lets us add category to  database
     * @return
     * @throws JukeBoxException
     */
    public Category add(Category category) throws JukeBoxException {
        if (category.getId() != 0){
            throw new JukeBoxException("Can't add category with ID. ID is autogenerated");
        }
        validateCategoryName(category.getName());
        return categoryDao.add(category);
    }
    /**
     * Method which allows us to update a category
     * in the Category table
     * @param category we want to update
     * @throws JukeBoxException
     */
    public Category update(Category category) throws JukeBoxException {
        validateCategoryName(category.getName());
        return categoryDao.update(category);
    }
    /**
     * Method which allows us to delete a category from
     * the database that has the provided id
     * @param id of the element we want to delete
     * @throws JukeBoxException
     */
    public void delete(int id) throws JukeBoxException {
        categoryDao.delete(id);
    }

}
